# PA Ecosystem Custom Environment Template
# This template provides all configuration options for maximum customization

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# PostgreSQL database password (minimum 32 characters recommended)
POSTGRES_PASSWORD=CHANGE_ME_TO_SECURE_PASSWORD_AT_LEAST_32_CHARS

# Supabase configuration
SUPABASE_ANON_KEY=CHANGE_ME_TO_YOUR_SUPABASE_ANON_KEY
SUPABASE_SERVICE_KEY=CHANGE_ME_TO_YOUR_SUPABASE_SERVICE_KEY

# =============================================================================
# N8N WORKFLOW AUTOMATION
# =============================================================================
# Generate with: openssl rand -base64 32
N8N_ENCRYPTION_KEY=CHANGE_ME_TO_SECURE_ENCRYPTION_KEY_32_CHARS

# Webhook URLs (configure based on your setup)
N8N_WEBHOOK_URL=CHANGE_ME_TO_YOUR_WEBHOOK_URL
WEBHOOK_URL=CHANGE_ME_TO_YOUR_WEBHOOK_URL

# N8n protocol and host configuration
N8N_PROTOCOL=https  # or http for local development
N8N_HOST=CHANGE_ME_TO_YOUR_N8N_HOST
N8N_EDITOR_BASE_URL=CHANGE_ME_TO_YOUR_N8N_EDITOR_URL

# =============================================================================
# API KEYS
# =============================================================================
# OpenAI API Key (required for most AI functionality)
OPENAI_API_KEY=CHANGE_ME_TO_YOUR_OPENAI_API_KEY

# Anthropic API Key (required for Claude models)
ANTHROPIC_API_KEY=CHANGE_ME_TO_YOUR_ANTHROPIC_API_KEY

# Google Gemini API Key (required for Gemini models)
GEMINI_API_KEY=CHANGE_ME_TO_YOUR_GEMINI_API_KEY

# =============================================================================
# SLACK INTEGRATION
# =============================================================================
# Slack Bot Token (from Slack app configuration)
SLACK_BOT_TOKEN=CHANGE_ME_TO_YOUR_SLACK_BOT_TOKEN

# Slack App Token (from Slack app configuration)
SLACK_APP_TOKEN=CHANGE_ME_TO_YOUR_SLACK_APP_TOKEN

# Slack User Token (for MCP server)
SLACK_MCP_XOXP_TOKEN=CHANGE_ME_TO_YOUR_SLACK_USER_TOKEN

# Letta Agent ID (from Letta dashboard)
LETTA_AGENT_ID=CHANGE_ME_TO_YOUR_LETTA_AGENT_ID
LETTA_BASE_URL=http://letta:8283

# =============================================================================
# CLOUDFLARE TUNNEL CONFIGURATION
# =============================================================================
# Cloudflare Tunnel Token (from Cloudflare dashboard)
CLOUDFLARE_TUNNEL_TOKEN=CHANGE_ME_TO_YOUR_CLOUDFLARE_TUNNEL_TOKEN

# Cloudflare Account ID
CLOUDFLARE_ACCOUNT_ID=CHANGE_ME_TO_YOUR_CLOUDFLARE_ACCOUNT_ID

# Cloudflare Zone ID
CLOUDFLARE_ZONE_ID=CHANGE_ME_TO_YOUR_CLOUDFLARE_ZONE_ID

# Cloudflare API Token
CLOUDFLARE_API_TOKEN=CHANGE_ME_TO_YOUR_CLOUDFLARE_API_TOKEN

# =============================================================================
# GMAIL MCP INTEGRATION
# =============================================================================
# Google OAuth credentials
GOOGLE_CLIENT_ID=CHANGE_ME_TO_YOUR_GOOGLE_CLIENT_ID
GOOGLE_CLIENT_SECRET=CHANGE_ME_TO_YOUR_GOOGLE_CLIENT_SECRET
GOOGLE_SCOPES=https://www.googleapis.com/auth/gmail.readonly
GOOGLE_TOKENS_DIR=/data/google_tokens
GMAIL_MCP_HTTP_PORT=8890

# =============================================================================
# NEO4J GRAPH DATABASE
# =============================================================================
NEO4J_PASSWORD=CHANGE_ME_TO_SECURE_NEO4J_PASSWORD

# =============================================================================
# LETTA AI AGENT CONFIGURATION
# =============================================================================
# Chat model for Letta (see https://docs.letta.com/leaderboard)
LETTA_CHAT_MODEL=openai/gpt-4o  # or anthropic/claude-sonnet-4, google_ai/gemini-2.5-flash, etc.

# Embedding model for Letta
LETTA_EMBEDDING_MODEL=openai/text-embedding-3-large  # or openai/text-embedding-3-small

# Debug mode (true for development, false for production)
LETTA_DEBUG=false

# PostgreSQL URI for Letta
LETTA_PG_URI=postgresql://postgres:${POSTGRES_PASSWORD}@supabase-db:5432/postgres

# =============================================================================
# OPEN WEBUI CONFIGURATION
# =============================================================================
# Log level (DEBUG, INFO, WARNING, ERROR)
OPENWEBUI_LOG_LEVEL=INFO

# Enable OpenAI API integration
ENABLE_OPENAI_API=true

# Enable Ollama integration
ENABLE_OLLAMA_API=false

# Enable title generation
ENABLE_TITLE_GENERATION=true

# Enable tags generation
ENABLE_TAGS_GENERATION=true

# Task model configuration
TASK_MODEL=openai/gpt-4o-mini
TASK_MODEL_EXTERNAL=openai/gpt-4o-mini

# RAG embedding configuration
RAG_EMBEDDING_ENGINE=openai  # or ollama, transformers
RAG_EMBEDDING_MODEL=openai/text-embedding-3-large

# Web search configuration
ENABLE_WEB_SEARCH=true
WEB_SEARCH_ENGINE=tavily  # or searxng

# Audio configuration
AUDIO_STT_ENGINE=openai  # or whisper, deepgram

# =============================================================================
# HAYHOOKS CONFIGURATION
# =============================================================================
HAYHOOKS_LOG_LEVEL=INFO
HAYHOOKS_BASE_URL=http://hayhooks:1416
HAYHOOKS_SEARCH_SEARXNG_ENABLED=false

# =============================================================================
# EXTERNAL API KEYS
# =============================================================================
# Tavily API Key (for web search)
TAVILY_API_KEY=CHANGE_ME_TO_YOUR_TAVILY_API_KEY

# LiteLLM Master Key
LITELLM_MASTER_KEY=CHANGE_ME_TO_SECURE_LITELLM_MASTER_KEY

# Zotero Integration
ZOTERO_LIBRARY_ID=CHANGE_ME_TO_YOUR_ZOTERO_LIBRARY_ID
ZOTERO_API_KEY=CHANGE_ME_TO_YOUR_ZOTERO_API_KEY

# GitHub API Key
GITHUB_API_KEY=CHANGE_ME_TO_YOUR_GITHUB_API_KEY

# =============================================================================
# OLLAMA CONFIGURATION
# =============================================================================
# Ollama base URL (enable if using local Ollama models)
OLLAMA_BASE_URL=http://host.docker.internal:11434

# =============================================================================
# NGROK CONFIGURATION (ALTERNATIVE TO CLOUDFLARE)
# =============================================================================
# Ngrok auth token (alternative to Cloudflare tunnels)
NGROK_AUTHTOKEN=CHANGE_ME_TO_YOUR_NGROK_AUTHTOKEN

# Ngrok domain (if using reserved domain)
NGROK_DOMAIN=CHANGE_ME_TO_YOUR_NGROK_DOMAIN

# =============================================================================
# DATABASE URLS
# =============================================================================
DATABASE_URL=postgresql://letta:letta@letta_db:5432/letta

# =============================================================================
# CUSTOM CONFIGURATION NOTES
# =============================================================================
# 1. Replace all CHANGE_ME_* values with your actual configuration
# 2. Choose appropriate models based on your needs and budget
# 3. Enable/disable features based on your requirements
# 4. Configure external access (Cloudflare or Ngrok) as needed
# 5. Set appropriate log levels for your environment
# 6. Ensure all API keys are valid and have appropriate permissions
