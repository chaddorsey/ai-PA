# PA Ecosystem Version Compatibility Matrix
# Purpose: Define compatibility between different versions of core frameworks
# Last Updated: 2025-01-21
# Version: 1.0.0

metadata:
  version: "1.0.0"
  last_updated: "2025-01-21T05:40:00Z"
  description: "Version compatibility matrix for PA Ecosystem frameworks"
  maintainer: "AI_Agent"

# Framework definitions
frameworks:
  n8n:
    name: "n8n Workflow Automation"
    current_version: "1.109.2"
    upgrade_path: "minor"
    api_version: "v1"
    
  letta:
    name: "Letta AI Agent Framework"
    current_version: "0.11.7"
    upgrade_path: "minor"
    api_version: "v1"
    
  graphiti:
    name: "Graphiti Knowledge Graph Framework"
    current_version: "0.18.9"
    upgrade_path: "patch"
    api_version: "v1"

# Compatibility matrix - defines which versions work together
compatibility_matrix:
  # n8n compatibility
  n8n:
    "1.109.2":
      letta:
        "0.11.7": "compatible"
        "0.12.0": "compatible"
        "0.13.0": "unknown"
      graphiti:
        "0.18.9": "compatible"
        "0.19.0": "compatible"
        "0.20.0": "unknown"
      infrastructure:
        postgresql: "15.x"
        neo4j: "5.x"
        docker: "24.x"
        
    "1.110.0":
      letta:
        "0.11.7": "compatible"
        "0.12.0": "compatible"
        "0.13.0": "unknown"
      graphiti:
        "0.18.9": "compatible"
        "0.19.0": "compatible"
        "0.20.0": "unknown"
      infrastructure:
        postgresql: "15.x"
        neo4j: "5.x"
        docker: "24.x"
        
    "1.111.0":
      letta:
        "0.11.7": "unknown"
        "0.12.0": "compatible"
        "0.13.0": "unknown"
      graphiti:
        "0.18.9": "unknown"
        "0.19.0": "compatible"
        "0.20.0": "unknown"
      infrastructure:
        postgresql: "15.x"
        neo4j: "5.x"
        docker: "24.x"

  # Letta compatibility
  letta:
    "0.11.7":
      n8n:
        "1.109.2": "compatible"
        "1.110.0": "compatible"
        "1.111.0": "unknown"
      graphiti:
        "0.18.9": "compatible"
        "0.19.0": "compatible"
        "0.20.0": "unknown"
      infrastructure:
        postgresql: "15.x"
        redis: "7.x"
        
    "0.12.0":
      n8n:
        "1.109.2": "compatible"
        "1.110.0": "compatible"
        "1.111.0": "unknown"
      graphiti:
        "0.18.9": "compatible"
        "0.19.0": "compatible"
        "0.20.0": "unknown"
      infrastructure:
        postgresql: "15.x"
        redis: "7.x"
        
    "0.13.0":
      n8n:
        "1.109.2": "unknown"
        "1.110.0": "unknown"
        "1.111.0": "unknown"
      graphiti:
        "0.18.9": "unknown"
        "0.19.0": "unknown"
        "0.20.0": "unknown"
      infrastructure:
        postgresql: "15.x"
        redis: "7.x"

  # Graphiti compatibility
  graphiti:
    "0.18.9":
      n8n:
        "1.109.2": "compatible"
        "1.110.0": "compatible"
        "1.111.0": "unknown"
      letta:
        "0.11.7": "compatible"
        "0.12.0": "compatible"
        "0.13.0": "unknown"
      infrastructure:
        neo4j: "5.x"
        python: "3.11+"
        
    "0.19.0":
      n8n:
        "1.109.2": "compatible"
        "1.110.0": "compatible"
        "1.111.0": "unknown"
      letta:
        "0.11.7": "compatible"
        "0.12.0": "compatible"
        "0.13.0": "unknown"
      infrastructure:
        neo4j: "5.x"
        python: "3.11+"
        
    "0.20.0":
      n8n:
        "1.109.2": "unknown"
        "1.110.0": "unknown"
        "1.111.0": "unknown"
      letta:
        "0.11.7": "unknown"
        "0.12.0": "unknown"
        "0.13.0": "unknown"
      infrastructure:
        neo4j: "5.x"
        python: "3.11+"

# Infrastructure compatibility
infrastructure:
  postgresql:
    "15.8.1.060":
      frameworks:
        n8n: "compatible"
        letta: "compatible"
        graphiti: "compatible"
        
  neo4j:
    "5.26":
      frameworks:
        graphiti: "compatible"
        
  redis:
    "7.2.5":
      frameworks:
        letta: "compatible"
        
  docker:
    "24.0.0+":
      frameworks:
        n8n: "compatible"
        letta: "compatible"
        graphiti: "compatible"

# Compatibility status definitions
compatibility_status:
  compatible: "Tested and verified to work together"
  incompatible: "Known to have issues or conflicts"
  unknown: "Not yet tested - proceed with caution"
  deprecated: "Version is deprecated and should be upgraded"
  experimental: "Experimental support - use with caution"

# Testing requirements
testing_requirements:
  api_compatibility:
    description: "API endpoints and data formats must be compatible"
    tests:
      - "endpoint_availability"
      - "request_response_format"
      - "authentication_compatibility"
      - "error_handling_compatibility"
      
  database_compatibility:
    description: "Database schemas and data formats must be compatible"
    tests:
      - "schema_compatibility"
      - "data_migration_compatibility"
      - "query_compatibility"
      - "transaction_compatibility"
      
  integration_compatibility:
    description: "Cross-service integrations must work correctly"
    tests:
      - "mcp_server_compatibility"
      - "webhook_compatibility"
      - "event_handling_compatibility"
      - "data_flow_compatibility"
      
  performance_compatibility:
    description: "Performance characteristics must be acceptable"
    tests:
      - "response_time_compatibility"
      - "throughput_compatibility"
      - "resource_usage_compatibility"
      - "scalability_compatibility"

# Upgrade paths and recommendations
upgrade_recommendations:
  n8n:
    current: "1.109.2"
    recommended: "1.110.0"
    path: "minor"
    notes: "Minor version upgrades are generally safe"
    
  letta:
    current: "0.11.7"
    recommended: "0.12.0"
    path: "minor"
    notes: "Minor version upgrades are generally safe"
    
  graphiti:
    current: "0.18.9"
    recommended: "0.19.0"
    path: "patch"
    notes: "Patch version upgrades are generally safe"

# Validation rules
validation_rules:
  version_format:
    description: "All versions must follow semantic versioning (semver)"
    pattern: "^[0-9]+\\.[0-9]+\\.[0-9]+$"
    
  compatibility_check:
    description: "All framework combinations must be validated before deployment"
    required_tests:
      - "api_compatibility"
      - "database_compatibility"
      - "integration_compatibility"
      
  upgrade_validation:
    description: "All upgrades must be validated against compatibility matrix"
    required_checks:
      - "target_version_compatibility"
      - "infrastructure_compatibility"
      - "dependency_compatibility"
